<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="a311.college.mapper.school.SchoolMapper">

    <!-- 大学信息分页查询 -->
    <select id="pageQuery" resultType="a311.college.entity.school.School">
        select
        school_id,
        school_head,
        school_name,
        school_province,
        school_address,
        rank_list,
        score
        from tb_school
        <where>
            <if test="schoolName != null and schoolName != ''">
                AND school_name LIKE CONCAT('%', #{schoolName}, '%')
            </if>
            <if test="province != null and province != ''">
                AND school_province = #{province}
            </if>
            <if test="rankList != null and !rankList.isEmpty()">
                AND (
                <foreach collection="rankList" item="item" separator="AND">rank_list LIKE CONCAT('%', #{item}, '%')
                </foreach>
                )
            </if>
        </where>
        order by score desc, length(rank_list) desc
    </select>

    <select id="selectScoreByYear" resultType="a311.college.vo.school.YearScoreVO">
        select distinct y.year,
                        b.batch_name,
                        sc.min_score,
                        sc.min_ranking,
                        sc.major_name,
                        sc.first_choice,
                        sc.other_choice,
                        sc.special
        from tb_school as s
                 JOIN tb_province as p ON s.school_id = p.school_id
                 JOIN tb_year as y ON p.province_id = y.province_id
                 JOIN tb_category as c ON y.year_id = c.year_id
                 JOIN tb_batch as b ON c.category_id = b.category_id
                 JOIN tb_score as sc ON b.batch_id = sc.batch_id
        where s.school_id = #{schoolId}
          and p.province_name = #{province}
          and y.year = #{year}
        order by sc.min_score
        LIMIT 5
    </select>

    <select id="selectByName" resultType="a311.college.entity.school.School">
        select s.school_id,
               s.school_head,
               s.school_name,
               s.school_province,
               s.school_address,
               s.rank_list,
               s.score
        from tb_school as s
        where school_name like concat('%', #{schoolName}, '%')
        order by score desc, length(rank_list) desc
    </select>

    <select id="selectByGrade" resultType="a311.college.entity.school.School">
        SELECT DISTINCT s.school_head,
                        s.school_name,
                        s.school_address,
                        s.rank_list,
                        s.score
        FROM tb_school as s
                 JOIN tb_province as p ON s.school_id = p.school_id
                 JOIN tb_year as y ON p.province_id = y.province_id
                 JOIN tb_category as c ON y.year_id = c.year_id
                 JOIN tb_batch as b ON c.category_id = b.category_id
                 JOIN tb_score as sc ON b.batch_id = sc.batch_id
        WHERE sc.min_score &lt; #{grade}
          and p.province_name = #{province}
        ORDER BY score desc
    </select>

    <select id="selectSimpleMajor" resultType="a311.college.vo.major.MajorSimpleVO">
        SELECT category_name, major_name
        FROM (SELECT c.category_name,
                     sc.major_name,
                     sc.min_score,
                     sc.min_ranking,
                     ROW_NUMBER() OVER (
                         PARTITION BY c.category_name -- 按类别名称分组
                         ORDER BY sc.min_score DESC, sc.min_ranking DESC
                         ) AS rn
              FROM tb_school AS s
                       JOIN tb_province AS p ON s.school_id = p.school_id
                       JOIN tb_year AS y ON p.province_id = y.province_id
                       JOIN tb_category AS c ON y.year_id = c.year_id
                       JOIN tb_batch AS b ON c.category_id = b.category_id
                       JOIN tb_score AS sc ON b.batch_id = sc.batch_id
              WHERE s.school_id = #{schoolId}) AS ranked
        WHERE rn = 1 -- 每个类别保留最高分专业
        ORDER BY min_score DESC, min_ranking DESC
        LIMIT 5;
    </select>

    <select id="getAllMajor" resultType="a311.college.entity.school.SchoolMajor">
        select distinct sc.major_name,
                        sc.first_choice,
                        sc.other_choice,
                        sc.special,
                        sc.min_score,
                        sc.min_ranking
        FROM tb_school as s
                 JOIN tb_province as p ON s.school_id = p.school_id
                 JOIN tb_year as y ON p.province_id = y.province_id
                 JOIN tb_category as c ON y.year_id = c.year_id
                 JOIN tb_batch as b ON c.category_id = b.category_id
                 JOIN tb_score as sc ON b.batch_id = sc.batch_id
        where s.school_id = #{schoolId}
          and p.province_name = #{province}
          and sc.first_choice = #{subject}
          and y.year = (SELECT MAX(year) FROM tb_year WHERE year &lt; YEAR(CURDATE()))
        order by sc.min_ranking
    </select>

    <select id="pageQueryMajor" resultType="a311.college.entity.school.SchoolMajor">
        select sc.major_name, b.batch_name, sc.first_choice, sc.other_choice, sc.special, sc.min_score, sc.min_ranking
        FROM tb_school AS s
                 JOIN tb_province as p ON s.school_id = p.school_id
                 JOIN tb_year as y ON p.province_id = y.province_id
                 JOIN tb_category as c ON y.year_id = c.year_id
                 JOIN tb_batch as b ON c.category_id = b.category_id
                 JOIN tb_score as sc ON b.batch_id = sc.batch_id
        WHERE s.school_id = #{schoolId}
    </select>

    <select id="getComment" resultType="a311.college.vo.school.CommentVO">
        select u.username, u.head, c.comment
        from
             tb_comment AS c,
             tb_user AS u
        where c.school_id = #{schoolId} and u.id = c.user_id
    </select>

    <select id="searchSchool" resultType="a311.college.vo.school.BriefSchoolInfoVO">
        select school_head, school_name, rank_list from tb_school as s
        <where>
            <if test="message != null and message != ''">
                s.school_name like concat('%', #{message}, '%')
            </if>
        </where>
        order by score
        limit 5
    </select>
</mapper>